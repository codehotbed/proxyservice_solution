// Code generated by go-swagger; DO NOT EDIT.

package rpc

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "ProxyService/proxyservice/openapi/autogen/proxyservice/models"
)

// GetClientsOKCode is the HTTP code returned for type GetClientsOK
const GetClientsOKCode int = 200

/*GetClientsOK OK

swagger:response getClientsOK
*/
type GetClientsOK struct {

	/*
	  In: Body
	*/
	Payload models.QueueResponse `json:"body,omitempty"`
}

// NewGetClientsOK creates GetClientsOK with default headers values
func NewGetClientsOK() *GetClientsOK {

	return &GetClientsOK{}
}

// WithPayload adds the payload to the get clients o k response
func (o *GetClientsOK) WithPayload(payload models.QueueResponse) *GetClientsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get clients o k response
func (o *GetClientsOK) SetPayload(payload models.QueueResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClientsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetClientsInternalServerErrorCode is the HTTP code returned for type GetClientsInternalServerError
const GetClientsInternalServerErrorCode int = 500

/*GetClientsInternalServerError Error while communicating with RabbitMQ Queue

swagger:response getClientsInternalServerError
*/
type GetClientsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetClientsInternalServerError creates GetClientsInternalServerError with default headers values
func NewGetClientsInternalServerError() *GetClientsInternalServerError {

	return &GetClientsInternalServerError{}
}

// WithPayload adds the payload to the get clients internal server error response
func (o *GetClientsInternalServerError) WithPayload(payload *models.ErrorResponse) *GetClientsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get clients internal server error response
func (o *GetClientsInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClientsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
