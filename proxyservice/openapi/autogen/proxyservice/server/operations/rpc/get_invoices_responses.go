// Code generated by go-swagger; DO NOT EDIT.

package rpc

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "ProxyService/proxyservice/openapi/autogen/proxyservice/models"
)

// GetInvoicesOKCode is the HTTP code returned for type GetInvoicesOK
const GetInvoicesOKCode int = 200

/*GetInvoicesOK OK

swagger:response getInvoicesOK
*/
type GetInvoicesOK struct {

	/*
	  In: Body
	*/
	Payload models.QueueResponse `json:"body,omitempty"`
}

// NewGetInvoicesOK creates GetInvoicesOK with default headers values
func NewGetInvoicesOK() *GetInvoicesOK {

	return &GetInvoicesOK{}
}

// WithPayload adds the payload to the get invoices o k response
func (o *GetInvoicesOK) WithPayload(payload models.QueueResponse) *GetInvoicesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get invoices o k response
func (o *GetInvoicesOK) SetPayload(payload models.QueueResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetInvoicesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetInvoicesInternalServerErrorCode is the HTTP code returned for type GetInvoicesInternalServerError
const GetInvoicesInternalServerErrorCode int = 500

/*GetInvoicesInternalServerError Error while communicating with RabbitMQ Queue

swagger:response getInvoicesInternalServerError
*/
type GetInvoicesInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetInvoicesInternalServerError creates GetInvoicesInternalServerError with default headers values
func NewGetInvoicesInternalServerError() *GetInvoicesInternalServerError {

	return &GetInvoicesInternalServerError{}
}

// WithPayload adds the payload to the get invoices internal server error response
func (o *GetInvoicesInternalServerError) WithPayload(payload *models.ErrorResponse) *GetInvoicesInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get invoices internal server error response
func (o *GetInvoicesInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetInvoicesInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
