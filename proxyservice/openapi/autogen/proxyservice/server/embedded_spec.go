// Code generated by go-swagger; DO NOT EDIT.

package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "A proxy service acquiring information from RabbitMQ RPC Queue",
    "title": "ClientProxyService",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/api/v1",
  "paths": {
    "/clients": {
      "get": {
        "description": "Returns all clients",
        "produces": [
          "application/json"
        ],
        "tags": [
          "rpc"
        ],
        "summary": "Returns all clients",
        "operationId": "getClients",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QueueResponse"
            }
          },
          "500": {
            "description": "Error while communicating with RabbitMQ Queue",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/invoices/{client_id}": {
      "get": {
        "description": "Returns invoices according to provided client_id",
        "produces": [
          "application/json"
        ],
        "tags": [
          "rpc"
        ],
        "summary": "Returns all invoices",
        "operationId": "getInvoices",
        "parameters": [
          {
            "type": "string",
            "description": "An identifier of client that invoices will be returned for",
            "name": "client_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QueueResponse"
            }
          },
          "500": {
            "description": "Error while communicating with RabbitMQ Queue",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "number",
          "format": "int64"
        },
        "Message": {
          "type": "string"
        }
      }
    },
    "QueueResponse": {
      "type": "object"
    }
  },
  "tags": [
    {
      "description": "rpc related endpoints",
      "name": "rpc"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "A proxy service acquiring information from RabbitMQ RPC Queue",
    "title": "ClientProxyService",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/api/v1",
  "paths": {
    "/clients": {
      "get": {
        "description": "Returns all clients",
        "produces": [
          "application/json"
        ],
        "tags": [
          "rpc"
        ],
        "summary": "Returns all clients",
        "operationId": "getClients",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QueueResponse"
            }
          },
          "500": {
            "description": "Error while communicating with RabbitMQ Queue",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/invoices/{client_id}": {
      "get": {
        "description": "Returns invoices according to provided client_id",
        "produces": [
          "application/json"
        ],
        "tags": [
          "rpc"
        ],
        "summary": "Returns all invoices",
        "operationId": "getInvoices",
        "parameters": [
          {
            "type": "string",
            "description": "An identifier of client that invoices will be returned for",
            "name": "client_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QueueResponse"
            }
          },
          "500": {
            "description": "Error while communicating with RabbitMQ Queue",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "number",
          "format": "int64"
        },
        "Message": {
          "type": "string"
        }
      }
    },
    "QueueResponse": {
      "type": "object"
    }
  },
  "tags": [
    {
      "description": "rpc related endpoints",
      "name": "rpc"
    }
  ]
}`))
}
